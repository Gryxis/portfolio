"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[942],{3942:(x,m,r)=>{r.r(m),r.d(m,{GameOfLifeModule:()=>w});var e=r(4650),g=r(6895),s=r(433),h=r(9837);const _=function(i){return{"living-cell":i}},f=function(){return{standalone:!0}};function T(i,a){if(1&i){const t=e.EpF();e.ynx(0),e.TgZ(1,"label",21)(2,"input",22),e.NdJ("ngModelChange",function(o){e.CHM(t);const l=e.oxw().index,p=e.oxw().index,u=e.oxw();return e.KtG(u.currentState[p][l]=o)}),e.qZA()(),e.BQk()}if(2&i){const t=e.oxw().index,n=e.oxw().index,o=e.oxw();e.xp6(1),e.Q6J("ngClass",e.VKq(4,_,o.currentState[n][t])),e.xp6(1),e.Q6J("ngModel",o.currentState[n][t])("id","game-of-life-cell-"+n+"-"+t)("ngModelOptions",e.DdM(6,f))}}function Z(i,a){if(1&i&&(e.ynx(0),e._UZ(1,"div",23),e.BQk()),2&i){const t=e.oxw().$implicit;e.xp6(1),e.Q6J("ngClass",e.VKq(1,_,t))}}function v(i,a){if(1&i&&(e.ynx(0),e.YNc(1,T,3,7,"ng-container",20),e.YNc(2,Z,2,3,"ng-container",20),e.BQk()),2&i){const t=e.oxw(2);e.xp6(1),e.Q6J("ngIf",!t.isRunning),e.xp6(1),e.Q6J("ngIf",t.isRunning)}}function M(i,a){if(1&i&&(e.TgZ(0,"div",18),e.YNc(1,v,3,2,"ng-container",19),e.qZA()),2&i){const t=a.$implicit;e.xp6(1),e.Q6J("ngForOf",t)}}let O=(()=>{class i{constructor(){this.size=16,this.currentState=[],this.isRunning=!1,this.fps=5,this.soupChance=30,this.sizeTooltip="Configure the size of the square grid,I recommend to use ~64. larger grids may lead to performance issues.",this.fpsTooltip="Configure speed of the simulation in frames per second",this.soupTooltip='This way you can create some "soup", a.k.a random grid with the given percentage of cells alive'}onCreate(){this.pauseGame(),this.currentState=[];for(let t=0;t<this.size;t++)this.currentState[t]=new Array(this.size),this.currentState[t].fill(!1)}onFillSoup(){this.currentState=this.currentState.map((t,n,o)=>t.map((l,p)=>Math.random()<=this.soupChance/100))}onKillAll(){this.pauseGame(),this.currentState=this.currentState.map(t=>t.map(n=>!1))}onStartOrPause(){this.isRunning?this.pauseGame():this.startGame()}pauseGame(){this.isRunning=!1,this.simulationInterval&&(clearInterval(this.simulationInterval),this.simulationInterval=void 0)}startGame(){this.pauseGame(),this.isRunning=!0,this.simulationInterval=setInterval(()=>{this.step()},1e3/this.fps)}step(){this.currentState=this.currentState.map((t,n,o)=>t.map((l,p)=>{let u=0;for(let d=-1;d<=1;d++)for(let c=-1;c<=1;c++)if(c||d){let C={y:(this.size+n+d)%this.size,x:(this.size+p+c)%this.size};o[C.y][C.x]&&u++}return!l&&3===u||!(!l||![2,3].includes(u))}))}}return i.\u0275fac=function(t){return new(t||i)},i.\u0275cmp=e.Xpm({type:i,selectors:[["app-game-of-life"]],decls:50,vars:20,consts:[[1,"mb-5"],[1,"d-flex","mb-3"],[1,"input-group","me-4",2,"width","20rem",3,"ngbTooltip"],[1,"input-group-text"],["type","number",1,"form-control",3,"ngModel","disabled","ngModelOptions","ngModelChange"],["type","button",1,"btn","btn-outline-secondary",3,"click"],[1,"input-group",2,"width","20rem",3,"ngbTooltip"],["type","number","min","1","max","30",1,"form-control",3,"disabled","ngModel","ngModelOptions","ngModelChange"],[1,"input-group","mb-3",2,"width","20rem",3,"ngbTooltip"],["type","number","min","1","max","99",1,"form-control",3,"disabled","ngModel","ngModelOptions","ngModelChange"],["type","button",1,"btn","btn-outline-secondary",3,"disabled","click"],[1,"d-flex","mb-5"],["type","button",1,"btn","btn-primary",3,"disabled","click"],[3,"ngClass"],["type","button",1,"btn","btn-secondary",3,"disabled","click"],[1,"icon-refresh-ccw"],["aria-label","grid of the game of life",1,"game-of-life-grid","container-xxl"],["class","game-of-life-row",4,"ngFor","ngForOf"],[1,"game-of-life-row"],[4,"ngFor","ngForOf"],[4,"ngIf"],["aria-label","checkbox for whether the cell is alive (true) or not",1,"game-of-life-cell",3,"ngClass"],["type","checkbox",3,"ngModel","id","ngModelOptions","ngModelChange"],[1,"game-of-life-cell",3,"ngClass"]],template:function(t,n){1&t&&(e.TgZ(0,"h1"),e._uU(1," Conway's Game of Life\n"),e.qZA(),e.TgZ(2,"p"),e._uU(3," This is a small implementation of Conway's game of life.\n"),e.qZA(),e.TgZ(4,"p"),e._uU(5," It is a small game which follows these rules:\n"),e.qZA(),e.TgZ(6,"ol")(7,"li"),e._uU(8," If a cell is dead and has exactly 3 living neighbours, it becomes alive. "),e.qZA(),e.TgZ(9,"li"),e._uU(10," If a cell is alive and less than 2 neighbours are alive, it dies of loneliness "),e.qZA(),e.TgZ(11,"li"),e._uU(12," If a cell is alive and has 2 or 3 living neighbours, it survives. "),e.qZA(),e.TgZ(13,"li"),e._uU(14," If a cell is alive and more than 3 neighbours are also alive, it dies due to overpopulation "),e.qZA()(),e.TgZ(15,"p"),e._uU(16," Below you will find a implementation. Since i can not provide you with a infinite grid,"),e._UZ(17,"br"),e._uU(18," I will let you choose the size of a sqare. This square is a toroid, meaning if the grid reaches the boundary,"),e._UZ(19,"br"),e._uU(20," it will continue on the other side."),e._UZ(21,"br"),e.qZA(),e.TgZ(22,"p",0),e._uU(23," This game has some very interesting patterns so feel free to try them out:\n"),e.qZA(),e.TgZ(24,"div",1)(25,"div",2)(26,"span",3),e._uU(27,"Size of the grid"),e.qZA(),e.TgZ(28,"input",4),e.NdJ("ngModelChange",function(l){return n.size=l}),e.qZA(),e.TgZ(29,"button",5),e.NdJ("click",function(){return n.onCreate()}),e._uU(30," Create grid "),e.qZA()(),e.TgZ(31,"div",6)(32,"span",3),e._uU(33," FPS"),e.qZA(),e.TgZ(34,"input",7),e.NdJ("ngModelChange",function(l){return n.fps=l}),e.qZA()()(),e.TgZ(35,"div",8)(36,"span",3),e._uU(37," Soup"),e.qZA(),e.TgZ(38,"input",9),e.NdJ("ngModelChange",function(l){return n.soupChance=l}),e.qZA(),e.TgZ(39,"span",3),e._uU(40," (%)"),e.qZA(),e.TgZ(41,"button",10),e.NdJ("click",function(){return n.onFillSoup()}),e._uU(42," Fill Soup "),e.qZA()(),e.TgZ(43,"div",11)(44,"button",12),e.NdJ("click",function(){return n.onStartOrPause()}),e._UZ(45,"span",13),e.qZA(),e.TgZ(46,"button",14),e.NdJ("click",function(){return n.onKillAll()}),e._UZ(47,"span",15),e.qZA()(),e.TgZ(48,"div",16),e.YNc(49,M,2,1,"div",17),e.qZA()),2&t&&(e.xp6(25),e.Q6J("ngbTooltip",n.sizeTooltip),e.xp6(3),e.Q6J("ngModel",n.size)("disabled",n.isRunning)("ngModelOptions",e.DdM(17,f)),e.xp6(3),e.Q6J("ngbTooltip",n.fpsTooltip),e.xp6(3),e.Q6J("disabled",n.isRunning)("ngModel",n.fps)("ngModelOptions",e.DdM(18,f)),e.xp6(1),e.Q6J("ngbTooltip",n.soupTooltip),e.xp6(3),e.Q6J("disabled",n.isRunning)("ngModel",n.soupChance)("ngModelOptions",e.DdM(19,f)),e.xp6(3),e.Q6J("disabled",n.isRunning||n.soupChance<0||n.soupChance>100),e.xp6(3),e.Q6J("disabled",!n.currentState.length||!n.fps||n.fps>30),e.xp6(1),e.Q6J("ngClass",n.isRunning?"icon-pause":"icon-play"),e.xp6(1),e.Q6J("disabled",!n.fps||n.fps>30),e.xp6(3),e.Q6J("ngForOf",n.currentState))},dependencies:[g.mk,g.sg,g.O5,s.Fj,s.wV,s.Wl,s.JJ,s.qQ,s.Fd,s.On,h._L],styles:[".game-of-life-grid[_ngcontent-%COMP%]   .game-of-life-row[_ngcontent-%COMP%]{display:flex;flex-wrap:nowrap}.game-of-life-grid[_ngcontent-%COMP%]   .game-of-life-cell[_ngcontent-%COMP%]{width:1rem;min-width:1rem;height:1rem;min-height:1rem;background-color:var(--bs-gray-200);border:1px solid}.game-of-life-grid[_ngcontent-%COMP%]   .game-of-life-cell[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{opacity:0;height:100%;width:100%}.game-of-life-grid[_ngcontent-%COMP%]   .game-of-life-cell.living-cell[_ngcontent-%COMP%]{background-color:var(--bs-green)}"]}),i})();var b=r(2655);const y=[{path:"",component:O}];let w=(()=>{class i{}return i.\u0275fac=function(t){return new(t||i)},i.\u0275mod=e.oAB({type:i}),i.\u0275inj=e.cJS({imports:[g.ez,s.u5,h.HK,b.Bz.forChild(y),b.Bz]}),i})()}}]);